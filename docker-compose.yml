# Define reusable configurations using anchors
x-app: &default-app
  build:
    context: "."
    dockerfile: Dockerfile
  volumes:
    - .:/code
  restart: "unless-stopped"

services:
  db:
    image: postgres:latest
    container_name: maple-db
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: maple_db_dev
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"

  web:
    <<: *default-app  # Reuse the default-app configuration
    container_name: maple-web
    command: >
      sh -c "wait-for-it.sh db:5432 -- 
             python manage.py collectstatic --noinput 
             && python manage.py makemigrations 
             && python manage.py migrate 
             && gunicorn md_app.wsgi:application --bind 0.0.0.0:1091 --workers 4 --timeout 1200"
    volumes:
      - .:/code  # Ensure code is mounted
    ports:
      - "1091:1091"
    depends_on:
      - db
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  tailwind:
    <<: *default-app
    container_name: maple-tailwind
    command: "python manage.py tailwind start"
    volumes:
      - .:/code
    ports:
      - "3000:3000"
    tty: true
    depends_on:
      - web

  pgadmin:
    image: dpage/pgadmin4
    container_name: maple-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: myemail@example.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "2000:80"
    depends_on:
      - db
    volumes:
      - pg_admin:/var/lib/pgadmin

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always

  celery:
    <<: *default-app
    container_name: maple-celery
    command: celery -A md_app worker -l info
    volumes:
      - .:/code
    depends_on:
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

volumes:
  pg_data:
  pg_admin:
  redis-data: